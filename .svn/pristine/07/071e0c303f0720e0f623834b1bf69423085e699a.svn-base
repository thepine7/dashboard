package com.andrew.hnt.api;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

import com.andrew.hnt.api.model.LoginVO;
import com.andrew.hnt.api.service.LoginService;

import javax.servlet.http.HttpSession;
import javax.servlet.http.HttpSessionEvent;
import javax.servlet.http.HttpSessionListener;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@Component
public class SessionListener implements HttpSessionListener {
    
    private static final Logger logger = LoggerFactory.getLogger(SessionListener.class);
    
    @Value("${server.servlet.session.timeout}")
    private int sessionTime;
    
    @Autowired
    private LoginService loginService;

    public void sessionCreated(HttpSessionEvent se) {
        se.getSession().setMaxInactiveInterval(sessionTime);
        logger.info("세션 생성됨 - 세션 ID: {}", se.getSession().getId());
    }

    public void sessionDestroyed(HttpSessionEvent se) {
        HttpSession session = se.getSession();
        String userId = (String) session.getAttribute("userId");
        
        if (userId != null && !userId.isEmpty()) {
            try {
                LoginVO loginVO = new LoginVO();
                loginVO.setUserId(userId);
                loginService.updateLogoutDtm(loginVO);
                logger.info("세션 만료로 인한 자동 로그아웃 처리 완료 - userId: {}, 세션 ID: {}", userId, session.getId());
            } catch (Exception e) {
                logger.error("세션 만료 시 로그아웃 처리 실패 - userId: {}, 세션 ID: {}, error: {}", userId, session.getId(), e.getMessage());
            }
        } else {
            logger.info("세션 만료됨 - 사용자 정보 없음, 세션 ID: {}", session.getId());
        }
    }
}