<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.andrew.hnt.api.mapper.MqttMapper">

    <select id="getSensorValue" parameterType="java.util.HashMap" resultType="com.andrew.hnt.api.model.SensorVO">
        select
            user_id as userId
            , sensor_id as sensorId
            , uuid as uuid
            , sensor_type as sensorType
            , sensor_value as sensorValue
            , date_format(inst_dtm, '%Y-%m-%d %H:%i:%s') as instDtm
        from
            hnt_sensor_data
        where 1 = 1
        and user_id = #{userId}
        and sensor_id = #{sensorId}
        order by inst_dtm desc
        limit 1
    </select>

    <select id="getUserInfo" parameterType="com.andrew.hnt.api.model.LoginVO" resultType="com.andrew.hnt.api.model.UserInfo">
        select
        no
        , user_nm as userNm
        , user_tel as userTel
        , user_email as userEmail
        , user_id as userId
        , user_pass as userPass
        , user_grade as userGrade
        , use_yn as useYn
        , del_yn as delYn
        , token as token
        from
        hnt_user
        where 1 = 1
        and use_yn = 'Y'
        and del_yn = 'N'
        and user_id = #{userId}
        <if test="userPass != null and userPass != ''">
            and user_pass = #{userPass}
        </if>
    </select>

    <select id="selectSetting" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select
            user_id
             , sensor_id
             , sensor_uuid
             , topic
             , alarm_yn1
             , alarm_yn2
             , alarm_yn3
             , alarm_yn4
             , alarm_yn5
             , set_val1
             , set_val2
             , set_val3
             , set_val4
             , delay_time1
             , delay_time2
             , delay_time3
             , delay_time4
             , delay_time5
             , re_delay_time1
             , re_delay_time2
             , re_delay_time3
             , re_delay_time4
             , re_delay_time5
        from hnt_config
        where 1 = 1
          and sensor_id = #{sensorId}
          and sensor_uuid = #{sensorUuid}
    </select>

    <insert id="insertSensorData" parameterType="com.andrew.hnt.api.model.SensorVO">
        insert into hnt_sensor_data
        (user_id, sensor_id, uuid, sensor_type, sensor_value, topic, raw_data, inst_id, inst_dtm, mdf_id, mdf_dtm)
        values
        (#{userId}, #{sensorId}, #{uuid}, #{sensorType}, #{sensorValue}, #{topic}, #{rawData}, #{instId}, now(), #{mdfId}, now())
    </insert>

    <select id="getSensorInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select
            count(*) as cnt
        from hnt_sensor_info
        where 1 = 1
        and user_id = #{userId}
        and sensor_uuid = #{sensorUuid}
    </select>
    
    <!-- 장치 이름 변경 -->
    <update id="updateSensorNameDirect" parameterType="java.util.HashMap">
        UPDATE hnt_sensor_info 
        SET sensor_name = #{sensorName},
            mdf_id = #{mdfId},
            mdf_dtm = NOW()
        WHERE user_id = #{userId} 
          AND sensor_uuid = #{sensorUuid}
    </update>
    
    <insert id="insertSensorInfo" parameterType="java.util.HashMap">
        insert into hnt_sensor_info
        (user_id, sensor_id, sensor_uuid, sensor_name, sensor_type, chart_type, inst_id, inst_dtm, mdf_id, mdf_dtm)
        values
        (#{userId}, #{sensorId}, #{sensorUuid}, #{sensorUuid}, #{sensorType}, 'none', #{instId}, now(), #{mdfId}, now())
    </insert>

    <insert id="insertDefaultConfig" parameterType="java.util.HashMap">
        insert into hnt_config
        (user_id, sensor_id, sensor_uuid, topic, alarm_yn1, alarm_yn2, alarm_yn3, alarm_yn4, alarm_yn5, set_val1, set_val2, set_val3, set_val4, delay_time1, delay_time2, delay_time3, delay_time4, delay_time5, re_delay_time1, re_delay_time2, re_delay_time3, re_delay_time4, re_delay_time5, inst_id, inst_dtm, mdf_id, mdf_dtm)
        values
        (#{userId}, #{sensorId}, #{sensorUuid}, #{topic}, 'N', 'N', 'N', 'N', 'N', '25.0', '5.0', '0.0', '0.0', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 'hnt', now(), 'hnt', now())
    </insert>

    <select id="selectNoti" parameterType="java.util.HashMap"  resultType="java.util.HashMap">
        select
            no
                ,user_token
                , user_id
                , sensor_uuid
                , alarm_time
        from  hnt_alarm
        where 1 = 1
          and user_id = #{userId}
          and user_token = #{userToken}
          and sensor_uuid = #{sensorUuid}
          and alarm_type = #{alarmType}
          and use_yn = 'Y'
    </select>

    <insert id="insertNoti" parameterType="java.util.HashMap">
        insert into hnt_alarm
        (user_id, user_token, sensor_uuid, alarm_time, inst_id, inst_dtm, mdf_id, mdf_dtm, use_yn, alarm_type)
        values
        (#{userId}, #{userToken}, #{sensorUuid}, date_add(now(), interval #{addTime} minute), 'hnt', now(), 'hnt', now(), 'Y', #{alarmType});
    </insert>

    <!-- 장치 전송 기능을 위한 쿼리들 -->
    
    <!-- 장치 전역 중복 체크 (이전 소유자 확인) -->
    <select id="getSensorInfoByUuid" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select user_id, sensor_id, sensor_uuid, sensor_name, sensor_type, chart_type
        from hnt_sensor_info
        where sensor_uuid = #{sensorUuid}
        limit 1
    </select>
    
    <!-- 기존 사용자의 장치 정보 삭제 (이전 처리) -->
    <delete id="deleteSensorInfoByUuid" parameterType="java.util.HashMap">
        delete from hnt_sensor_info where sensor_uuid = #{sensorUuid}
    </delete>
    
    <!-- 기존 사용자의 장치 설정 정보 삭제 (이전 처리) -->
    <delete id="deleteConfigByUuid" parameterType="java.util.HashMap">
        delete from hnt_config where sensor_uuid = #{sensorUuid}
    </delete>
    
    <!-- 기존 사용자의 센서 데이터 삭제 (이전 처리) -->
    <delete id="deleteSensorDataByUuid" parameterType="java.util.HashMap">
        delete from hnt_sensor_data where uuid = #{sensorUuid}
    </delete>
    
    <!-- 기존 사용자의 알림 데이터 삭제 (이전 처리) -->
    <delete id="deleteAlarmByUuid" parameterType="java.util.HashMap">
        delete from hnt_alarm where sensor_uuid = #{sensorUuid}
    </delete>

</mapper>